package contactomaestro;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author isifi
 */
public class ImportaciónVentana extends javax.swing.JFrame {
    
    Principal p;
    ImportaciónCode i = new ImportaciónCode(this);
    
    public ImportaciónVentana() {
        initComponents();
    }
    
    public ImportaciónVentana(Principal p) {
        initComponents();
        this.p = p;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        importarExportar = new javax.swing.ButtonGroup();
        sldMin = new javax.swing.JSlider();
        spnMin = new javax.swing.JSpinner();
        btnEjecuta = new javax.swing.JButton();
        btnStop = new javax.swing.JButton();
        lblimportar = new javax.swing.JLabel();
        spnTiempo = new javax.swing.JComboBox<>();
        lblvelocidad = new javax.swing.JLabel();
        barP = new javax.swing.JProgressBar();
        txtIteracion = new javax.swing.JLabel();
        rbImportar = new javax.swing.JRadioButton();
        rbExportar = new javax.swing.JRadioButton();
        txtFieldRuta = new javax.swing.JTextField();
        lblRuta = new javax.swing.JLabel();

        setTitle("Importación/Exportación contactos");

        sldMin.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sldMinStateChanged(evt);
            }
        });

        spnMin.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnMinStateChanged(evt);
            }
        });

        btnEjecuta.setText("Ejecutar");
        btnEjecuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEjecutaActionPerformed(evt);
            }
        });

        btnStop.setText("Stop");
        btnStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopActionPerformed(evt);
            }
        });

        lblimportar.setText("nº de contactos:");

        spnTiempo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0.1", "0.5", "1", "5" }));

        lblvelocidad.setText("Velocidad de importación:");

        txtIteracion.setText("Contactos importados/exportados:");

        importarExportar.add(rbImportar);
        rbImportar.setText("Importar");
        rbImportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbImportarActionPerformed(evt);
            }
        });

        importarExportar.add(rbExportar);
        rbExportar.setText("Exportar");
        rbExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbExportarActionPerformed(evt);
            }
        });

        lblRuta.setText("Ruta:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(txtIteracion))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnStop, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnEjecuta))
                            .addComponent(sldMin, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(barP, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(lblimportar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(spnMin, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(lblvelocidad))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtFieldRuta, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(rbImportar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblRuta)
                                        .addGap(51, 51, 51)
                                        .addComponent(rbExportar)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(spnTiempo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbImportar)
                            .addComponent(rbExportar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblRuta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(txtFieldRuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spnMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblimportar)
                    .addComponent(lblvelocidad)
                    .addComponent(spnTiempo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(sldMin, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtIteracion)
                .addGap(5, 5, 5)
                .addComponent(barP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnStop)
                    .addComponent(btnEjecuta))
                .addGap(49, 49, 49))
        );

        sldMin.setValue(100);
        txtFieldRuta.setEditable(false);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sldMinStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sldMinStateChanged
        spnMin.setValue(sldMin.getValue());
    }//GEN-LAST:event_sldMinStateChanged

    private void spnMinStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnMinStateChanged
        int i = (Integer) spnMin.getValue();
        System.out.println(i);
    }//GEN-LAST:event_spnMinStateChanged

    private void btnEjecutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEjecutaActionPerformed
        int s = Integer.parseInt(spnMin.getValue().toString());
        i.setSumaMin(s);
        float segs = Float.parseFloat(spnTiempo.getSelectedItem().toString());
        i.setSegsInte(segs);
        Thread hilo2 = new Thread() {
            public void run() {
                i.Run();
            }
        };
        hilo2.start();
        btnEjecuta.setEnabled(false);
        btnStop.setEnabled(true);
    }//GEN-LAST:event_btnEjecutaActionPerformed

    private void btnStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopActionPerformed
        i.setStop();
    }//GEN-LAST:event_btnStopActionPerformed

    private void rbImportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbImportarActionPerformed
        rbImportar.setSelected(true);
        JFileChooser fichero = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Hojas de contacto .csv", "csv");
        fichero.setFileFilter(filter);
        fichero.setMultiSelectionEnabled(false);
        int respuesta = fichero.showOpenDialog(null);
        fichero.setDialogTitle("Selecciona un archivo de contactos");
        
        if (respuesta == JFileChooser.APPROVE_OPTION) {
            JOptionPane.showMessageDialog(rootPane, "El archivo " + fichero.getSelectedFile().getAbsolutePath() + " se ha seleccionado", "Correcto", JOptionPane.PLAIN_MESSAGE);
            this.txtFieldRuta.setText(fichero.getSelectedFile().getAbsolutePath());
        }
        if (respuesta == JFileChooser.ERROR_OPTION) {
            JOptionPane.showMessageDialog(rootPane, "La selección ha fallado", "Error", JOptionPane.ERROR_MESSAGE);
        }
        if (respuesta == JFileChooser.CANCEL_OPTION) {
            JOptionPane.showMessageDialog(rootPane, "La selección se ha cancelado", "Selección Cancelada", JOptionPane.ERROR_MESSAGE);
        }
        rbExportar.setSelected(false);
        
    }//GEN-LAST:event_rbImportarActionPerformed

    private void rbExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbExportarActionPerformed
               rbExportar.setSelected(true);
        JFileChooser fichero = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Hojas de contacto .csv", "csv");
        fichero.setFileFilter(filter);
        fichero.setMultiSelectionEnabled(false);
        int respuesta = fichero.showSaveDialog(null);
        fichero.setDialogTitle("Selecciona un archivo de contactos");
        
        if (respuesta == JFileChooser.APPROVE_OPTION) {
            JOptionPane.showMessageDialog(rootPane, "El archivo " + fichero.getSelectedFile().getAbsolutePath() + " se ha guardado", "Correcto", JOptionPane.PLAIN_MESSAGE);
            this.txtFieldRuta.setText(fichero.getSelectedFile().getAbsolutePath());
        }
        if (respuesta == JFileChooser.ERROR_OPTION) {
            JOptionPane.showMessageDialog(rootPane, "No se ha podido guardar el archivo", "Error", JOptionPane.ERROR_MESSAGE);
        }
        if (respuesta == JFileChooser.CANCEL_OPTION) {
            JOptionPane.showMessageDialog(rootPane, "Se ha cancelado la operación", "Guardar cancelado", JOptionPane.ERROR_MESSAGE);
        }
        rbImportar.setSelected(false);
    }//GEN-LAST:event_rbExportarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ImportaciónVentana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ImportaciónVentana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ImportaciónVentana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ImportaciónVentana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ImportaciónVentana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JProgressBar barP;
    javax.swing.JButton btnEjecuta;
    javax.swing.JButton btnStop;
    private javax.swing.ButtonGroup importarExportar;
    private javax.swing.JLabel lblRuta;
    private javax.swing.JLabel lblimportar;
    private javax.swing.JLabel lblvelocidad;
    private javax.swing.JRadioButton rbExportar;
    private javax.swing.JRadioButton rbImportar;
    private javax.swing.JSlider sldMin;
    javax.swing.JSpinner spnMin;
    javax.swing.JComboBox<String> spnTiempo;
    private javax.swing.JTextField txtFieldRuta;
    javax.swing.JLabel txtIteracion;
    // End of variables declaration//GEN-END:variables
}
